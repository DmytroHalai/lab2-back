name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test -d testdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Build JAR
        run: |
          if [ -f mvnw ]; then
            ./mvnw -B -ntp clean package -DskipTests
          else
            mvn -B -ntp clean package -DskipTests
          fi

      - name: Build Docker image
        run: docker build -t lab2-back:test .

      - name: Run app and check health
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/testdb
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test
          SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        run: |
          docker run -d --name app-test \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL \
            -e SPRING_DATASOURCE_USERNAME \
            -e SPRING_DATASOURCE_PASSWORD \
            -e SPRING_JPA_HIBERNATE_DDL_AUTO \
            --add-host=host.docker.internal:host-gateway \
            lab2-back:test

          echo "Waiting for app to start (max 60s)..."
          timeout 60 bash -c '
            until curl -f http://localhost:8080/actuator/health 2>/dev/null; do
              echo "Still waiting..."
              sleep 2
            done
          ' || (echo "App failed to start!" && docker logs app-test && exit 1)

          echo "App is UP and running!"
          curl http://localhost:8080/actuator/health

      - name: Cleanup
        if: always()
        run: |
          docker stop app-test || true
          docker rm app-test || true